name: Deploy DEV

on:
  pull_request:
    branches: [ dev ]

jobs:
  deploy-env:
    permissions:
      pull-requests: write
      contents: read
      packages: write
    name: Deploy Lambda
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.0.0
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip' # caching pip dependencies
    - run: pip install -r requirements.txt

    - name: NPM - Load cached venv
      id: cached-npm-dependencies
      uses: actions/cache@v2
      with:
        path: node_modules
        key: npm-${{ runner.os }}-${{ hashFiles('**/package.json') }}

    - name: NPM - Install dependencies
      if: steps.cached-npm-dependencies.outputs.cache-hit != 'true'
      run: 'npm install'

    - name: Deploy using sls
      run: |
        CREDS=`aws sts assume-role --role-arn arn:aws:iam::${{secrets.AWS_ACCOUNT_DEV_ID}}:role/serverless-permission-DeployerRole-${{secrets.DEPLOYER_ROLE_ID}} --role-session-name=gha_deployer`
        export AWS_ACCESS_KEY_ID=`echo $CREDS | jq -r '.Credentials.AccessKeyId'`
        export AWS_SECRET_ACCESS_KEY=`echo $CREDS | jq -r '.Credentials.SecretAccessKey'`
        export AWS_SESSION_TOKEN=`echo $CREDS | jq -r '.Credentials.SessionToken'`
        export STAGE=${{secrets.AWS_DEV_STAGE}}
        export SLS_DEBUG="*"
        npx sls deploy --stage ${{secrets.AWS_DEV_STAGE}} --region ${{secrets.AWS_DEFAULT_REGION}}
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID_DEV}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY_DEV}}
        AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
        AWS_ACCOUNT_DEV_ID: ${{secrets.AWS_ACCOUNT_DEV_ID}}

    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |
          Your SLS App was deployed!
          Awesome :D

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
